[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Dell\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Dell\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.2)
[debug]       Load.loadUnit: plugins took 91.4947ms
[debug]       Load.loadUnit: defsScala took 0.202ms
[debug] [Loading] Scanning directory C:\Users\Dell\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dell\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.353 ms
[debug]           Load.resolveProject(global-plugins) took 41.222ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Dell\.sbt\1.0\plugins, plugins: List(<none>))) took 83.7188ms
[debug] [Loading] Done in C:\Users\Dell\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 103.5358ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2078ms
[debug]     Load.loadUnit(file:/C:/Users/Dell/.sbt/1.0/plugins/, ...) took 204.2109ms
[debug]   Load.apply: load took 375.5097ms
[debug]   Load.apply: resolveProjects took 7.6453ms
[debug]   Load.apply: finalTransforms took 67.748ms
[debug]   Load.apply: config.delegates took 7.9653ms
[debug]   Load.apply: Def.make(settings)... took 617.569ms
[debug]   Load.apply: structureIndex took 255.0702ms
[debug]   Load.apply: mkStreams took 1.8565ms
[info] loading global plugins from C:\Users\Dell\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4385.4352ms
[debug]           Load.loadUnit: plugins took 24.2965ms
[debug]           Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\Dell\IdeaProjects\BOARD_GAMES_ENGINE\project
[debug]             Load.loadUnit: mkEval took 5.716ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dell\IdeaProjects\BOARD_GAMES_ENGINE\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.5184 ms
[info] loading settings for project board_games_engine-build from idea.sbt ...
[debug]               Load.resolveProject(board_games_engine-build) took 4.5748ms
[debug]             Load.loadTransitive: finalizeProject(Project(id board_games_engine-build, base: C:\Users\Dell\IdeaProjects\BOARD_GAMES_ENGINE\project, plugins: List(<none>))) took 9.9873ms
[debug] [Loading] Done in C:\Users\Dell\IdeaProjects\BOARD_GAMES_ENGINE\project, returning: (board_games_engine-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3515.4925ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.9218ms
[debug]         Load.loadUnit(file:/C:/Users/Dell/IdeaProjects/BOARD_GAMES_ENGINE/project/, ...) took 3549.0173ms
[debug]       Load.apply: load took 3551.4924ms
[debug]       Load.apply: resolveProjects took 0.2571ms
[debug]       Load.apply: finalTransforms took 15.7571ms
[debug]       Load.apply: config.delegates took 0.4582ms
[debug]       Load.apply: Def.make(settings)... took 233.1838ms
[debug]       Load.apply: structureIndex took 60.6848ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from C:\Users\Dell\IdeaProjects\BOARD_GAMES_ENGINE\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6453.4232ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\Dell\IdeaProjects\BOARD_GAMES_ENGINE
[debug]       Load.loadUnit: mkEval took 0.3793ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dell\IdeaProjects\BOARD_GAMES_ENGINE, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.0234 ms
[info] loading settings for project board_games_engine from build.sbt ...
[debug]         Load.resolveProject(board_games_engine) took 73.6445ms
[debug]       Load.loadTransitive: finalizeProject(Project(id board_games_engine, base: C:\Users\Dell\IdeaProjects\BOARD_GAMES_ENGINE, plugins: List(<none>))) took 81.6989ms
[debug] [Loading] Done in C:\Users\Dell\IdeaProjects\BOARD_GAMES_ENGINE, returning: (board_games_engine)
[debug]     Load.loadUnit: loadedProjectsRaw took 3749.4893ms
[debug]     Load.loadUnit: cleanEvalClasses took 37.4716ms
[debug]   Load.loadUnit(file:/C:/Users/Dell/IdeaProjects/BOARD_GAMES_ENGINE/, ...) took 10241.4375ms
[debug] Load.apply: load took 10243.2797ms
[debug] Load.apply: resolveProjects took 0.1439ms
[debug] Load.apply: finalTransforms took 36.6192ms
[debug] Load.apply: config.delegates took 0.2837ms
[debug] Load.apply: Def.make(settings)... took 336.7966ms
[debug] Load.apply: structureIndex took 54.4803ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to BOARD_GAMES_ENGINE (in build file:/C:/Users/Dell/IdeaProjects/BOARD_GAMES_ENGINE/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * board_games_engine / mainClass
[warn]   +- C:\Users\Dell\IdeaProjects\BOARD_GAMES_ENGINE\build.sbt:13
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 65520 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 65520, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to BOARD_GAMES_ENGINE (in build file:/C:/Users/Dell/IdeaProjects/BOARD_GAMES_ENGINE/)
[debug] > Exec(idea-shell, None, None)
